{
  // Flutter
  "dart.flutterSdkPath": "/home/sujan/flutter",

  // Github Copilot
  "github.copilot.chat.inlineChatHint.enabled": true,
  "github.copilot.nextEditSuggestions.enabled": true,

  // Liveserver
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,

  // Diff
  "diffEditor.codeLens": true,
  "diffEditor.hideUnchangedRegions.enabled": true,

  // Files
  "files.trimTrailingWhitespace": true,
  "files.autoSave": "onFocusChange",

  // Search
  "search.useGlobalIgnoreFiles": true,
  "search.showLineNumbers": true,
  "search.smartCase": true,

  // Window
  "window.autoDetectColorScheme": true,
  "window.confirmSaveUntitledWorkspace": false,
  "window.density.editorTabHeight": "compact",
  "window.customMenuBarAltFocus": false,
  "window.enableMenuBarMnemonics": false,
  "window.commandCenter": false,
  "window.menuBarVisibility": "compact",
  "window.customTitleBarVisibility": "never",

  // Workbench
  "workbench.list.multiSelectModifier": "alt",
  "workbench.preferredLightColorTheme": "Tokyo Night",
  "workbench.colorTheme": "Tokyo Night",
  "workbench.preferredDarkColorTheme": "Tokyo Night",
  "workbench.editor.revealIfOpen": true,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,

  // Telemetry
  // "telemetry.enableTelemetry": false,
  "telemetry.telemetryLevel": "off",
  "telemetry.feedback.enabled": false,

  // Explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.compactFolders": false,

  // Scm
  "scm.compactFolders": false,

  // Editor
  "editor.tabSize": 2,
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.copyWithSyntaxHighlighting": false,
  "editor.guides.bracketPairs": "active",
  "editor.linkedEditing": true,
  "editor.smoothScrolling": true,
  "editor.tabCompletion": "on",
  "editor.fontFamily": "'FiraCode Nerd Font', 'monospace', monospace",
  "editor.cursorSurroundingLines": 5,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.suggest.showStatusBar": true,
  "editor.scrollbar.horizontalScrollbarSize": 6,
  "editor.scrollbar.verticalScrollbarSize": 6,
  "editor.minimap.enabled": false,

  // Status Bar
  "debug.showInStatusBar": "always",
  "problems.showCurrentInStatus": true,

  // Terminal
  "terminal.integrated.defaultProfile.linux": "fish",

  // Lua
  "luahelper.format.tab_width": 2,
  "luahelper.format.break_after_operator": false,
  "luahelper.format.keep_simple_function_one_line": true,
  "luahelper.format.keep_simple_control_block_one_line": true,
  "dart.analysisServerFolding": false,
  "luahelper.format.align_table_field": false,
  "luahelper.format.chop_down_parameter": true,
  "luahelper.format.chop_down_table": true,
  "luahelper.format.continuation_indent_width": 2,
  "luahelper.format.indent_width": 2,

  // Formatters
  "[python]": {
    "editor.formatOnType": true
  },
  "[lua]": {
    "editor.defaultFormatter": "yinfei.luahelper"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "files.associations": {
    "*.gs": "javascript"
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },

  // Recommendations
  "extensions.ignoreRecommendations": true,

  // Zen Mode
  "zenMode.hideLineNumbers": false,
  "zenMode.centerLayout": false,
  "zenMode.fullScreen": false,
  "zenMode.hideStatusBar": false,
  "zenMode.showTabs": "single",

  // Neovim
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.lua",
  "editor.lineNumbers": "relative",
  "vscode-neovim.compositeKeys": {
    "jk": {
      "command": "vscode-neovim.escape"
    },
    "jj": {
      "command": "vscode-neovim.escape"
    },
    "kj": {
      "command": "vscode-neovim.escape"
    }
  },

  // Whichkey
  "whichkey.delay": 0,
  "whichkey.sortOrder": "customNonNumberFirst",
  "whichkey.bindings": [
    {
      "key": " ",
      "name": "Find Recent Files",
      "type": "command",
      "command": "workbench.action.quickOpen"
    },
    {
      "key": "?",
      "name": "Search Keybindings",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": ",",
      "name": "Show All Editors",
      "type": "command",
      "command": "workbench.action.showAllEditors"
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.view.explorer"
    },
    {
      "key": "l",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    {
      "key": "-",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "|",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": ".",
      "name": "Repeat most recent action",
      "type": "command",
      "command": "whichkey.repeatMostRecent"
    },
    {
      "key": "a",
      "name": "AI...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Ask Copilot",
          "type": "command",
          "command": "workbench.panel.chat"
        },
        {
          "key": "q",
          "name": "Quick Chat",
          "type": "command",
          "command": "workbench.action.openQuickChat"
        },
        {
          "key": "f",
          "name": "Fix Chat",
          "command": "github.copilot.chat.fix"
        }
      ]
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "p",
          "name": "Pin active editor",
          "type": "command",
          "command": "workbench.action.pinEditor"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "o",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "l",
          "name": "Close editors to the left",
          "type": "command",
          "command": "workbench.action.closeEditorsToTheLeft"
        },
        {
          "key": "r",
          "name": "Close editors to the right",
          "type": "command",
          "command": "workbench.action.closeEditorsToTheRight"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "c",
      "name": "Code...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Code Action",
          "type": "command",
          "command": "editor.action.codeAction"
        },
        {
          "key": "A",
          "name": "Source action",
          "type": "command",
          "command": "editor.action.sourceAction"
        },
        {
          "key": "p",
          "name": "Preview Markdown to Side",
          "command": "markdown.showPreviewToSide",
          "when": "!notebookEditorFocused && editorLangId == 'markdown'"
        },
        {
          "key": "i",
          "name": "Organize Imports",
          "type": "command",
          "command": "editor.action.organizeImports"
        },
        {
          "key": "r",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "R",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.Refactor"
        },
        {
          "key": "F",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument"
        },
        {
          "key": "=",
          "name": "Format selection",
          "type": "command",
          "command": "editor.action.formatSelection"
        },
        {
          "key": ".",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix"
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "t",
          "name": "Terminate debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "P",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "O",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "b",
          "name": "Step back",
          "type": "command",
          "command": "workbench.action.debug.stepBack"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "C",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "T",
          "name": "Toggle REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "f",
      "name": "Find...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Show all opened files",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "e",
          "name": "Show active in explorer",
          "type": "command",
          "command": "workbench.files.action.showActiveFileInExplorer"
        },
        {
          "key": "f",
          "name": "Quick Open file",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "F",
          "name": "Open file in folder",
          "type": "command",
          "command": "workbench.action.files.openFileFolder"
        },
        {
          "key": "n",
          "name": "New Untitled",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "p",
          "name": "Switch project",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "w",
          "name": "Open active in new window",
          "type": "command",
          "command": "workbench.action.files.showOpenedFileInNewWindow"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Add Remote",
          "type": "command",
          "command": "git.addRemote"
        },
        {
          "key": "d",
          "name": "Diff",
          "type": "bindings",
          "bindings": [
            {
              "key": "d",
              "name": "Open Diff",
              "type": "command",
              "command": "git.timeline.openDiff"
            },
            {
              "key": "h",
              "name": "Diff Stage Hunk",
              "type": "command",
              "command": "git.diff.stageHunk"
            },
            {
              "key": "m",
              "name": "Compute Conflicts with Git (Diff3)",
              "type": "command",
              "command": "git.runGitMergeDiff3"
            },
            {
              "key": "s",
              "name": "Diff Stage Selection",
              "type": "command",
              "command": "git.diff.stageSelection"
            },
            {
              "key": "x",
              "name": "Close All Diff Editors",
              "type": "command",
              "command": "git.closeAllDiffEditors"
            }
          ]
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "Commit",
              "type": "command",
              "command": "git.commit"
            },
            {
              "key": "C",
              "name": "Commit All",
              "type": "command",
              "command": "git.commitAll"
            },
            {
              "key": "s",
              "name": "Commit Staged",
              "type": "command",
              "command": "git.commitStaged"
            },
            {
              "key": "M",
              "name": "Commit Staged All",
              "type": "command",
              "command": "git.commitStagedAll"
            },
            {
              "key": "C",
              "name": "Commit All",
              "type": "command",
              "command": "git.commitAll"
            },
            {
              "key": "u",
              "name": "Undo Last Commit",
              "type": "command",
              "command": "git.undoCommit"
            }
          ]
        },
        {
          "key": "C",
          "name": "Create/Cherry Pick",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Create Branch",
              "type": "command",
              "command": "git.branch"
            },
            {
              "key": "t",
              "name": "Create Tag",
              "type": "command",
              "command": "git.createTag"
            },
            {
              "key": "B",
              "name": "Create Branch From",
              "type": "command",
              "command": "git.branchFrom"
            }
          ]
        },
        {
          "key": "D",
          "name": "Delete/Discard",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Delete Branch",
              "type": "command",
              "command": "git.deleteBranch"
            },
            {
              "key": "t",
              "name": "Delete Tag",
              "type": "command",
              "command": "git.deleteTag"
            },
            {
              "key": "B",
              "name": "Delete Remote Branch",
              "type": "command",
              "command": "git.deleteRemoteBranch"
            },
            {
              "key": "T",
              "name": "Delete Remote Tag",
              "type": "command",
              "command": "git.deleteRemoteTag"
            },
            {
              "key": "a",
              "name": "Discard All Changes",
              "type": "command",
              "command": "git.cleanAll"
            },
            {
              "key": "c",
              "name": "Discard Changes",
              "type": "command",
              "command": "git.clean"
            },
            {
              "key": "u",
              "name": "Discard All Untracked Changes",
              "type": "command",
              "command": "git.cleanAllUntracked"
            }
          ]
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "bindings",
          "bindings": [
            {
              "key": "m",
              "name": "Merge",
              "type": "command",
              "command": "git.merge"
            },
            {
              "key": "o",
              "name": "Resolve in Merge Editor",
              "type": "command",
              "command": "git.openMergeEditor"
            },
            {
              "key": "s",
              "name": "Stage All Merge Changes",
              "type": "command",
              "command": "git.stageAllMerge"
            },
            {
              "key": "c",
              "name": "Run Git Merge",
              "type": "command",
              "command": "git.runGitMerge"
            },
            {
              "key": "a",
              "name": "Accept Merge",
              "type": "command",
              "command": "git.acceptMerge"
            },
            {
              "key": "x",
              "name": "Abort Merge",
              "type": "command",
              "command": "git.mergeAbort"
            }
          ]
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "h",
          "name": "Hunk",
          "type": "bindings",
          "bindings": [
            {
              "key": "a",
              "name": "Open All Changes",
              "type": "command",
              "command": "git.openAllChanges"
            },
            {
              "key": "r",
              "name": "Revert selected ranges",
              "type": "command",
              "command": "git.revertSelectedRanges",
              "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
            },
            {
              "key": "s",
              "name": "Stage Selected Ranges",
              "type": "command",
              "command": "git.stageSelectedRanges",
              "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
            },
            {
              "key": "u",
              "name": "Unstage Selected Ranges",
              "command": "git.unstageSelectedRanges",
              "type": "command",
              "when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'"
            },
            {
              "key": "S",
              "name": "Stage All Changes",
              "type": "command",
              "command": "git.stageAll"
            },
            {
              "key": "U",
              "name": "Unstage",
              "type": "command",
              "command": "git.unstage"
            }
          ]
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },

        {
          "key": "n",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },

        {
          "key": "p",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "s",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "S",
          "name": "Stash/Status",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "v",
          "name": "View",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "View Changes",
              "type": "command",
              "command": "git.viewChanges"
            },
            {
              "key": "C",
              "name": "View Commit Timeline",
              "type": "command",
              "command": "git.timeline.viewCommit"
            },
            {
              "key": "h",
              "name": "Open File History",
              "type": "command",
              "command": "git.viewFileHistory"
            },
            {
              "key": "d",
              "name": "Open File Diff",
              "type": "command",
              "command": "git.viewFileDiff"
            },
            {
              "key": "s",
              "name": "View Staged Changes",
              "type": "command",
              "command": "git.viewStagedChanges"
            },
            {
              "key": "S",
              "name": "View Stash",
              "type": "command",
              "command": "git.stashView"
            },
            {
              "key": "u",
              "name": "View Unstaged Changes",
              "type": "command",
              "command": "git.viewUnstagedChanges"
            }
          ]
        }
      ]
    },
    {
      "key": "H",
      "name": "Harpoon Add Editor",
      "type": "command",
      "command": "vscode-harpoon.addEditor"
    },
    {
      "key": "1",
      "name": "Harpoon Goto Editor 1",
      "command": "vscode-harpoon.gotoEditor1",
      "when": "neovim.mode != insert && (editorTextFocus || !inputFocus)"
    },
    {
      "key": "2",
      "name": "Harpoon Goto Editor 2",
      "command": "vscode-harpoon.gotoEditor2",
      "when": "neovim.mode != insert && (editorTextFocus || !inputFocus)"
    },
    {
      "key": "3",
      "name": "Harpoon Goto Editor 3",
      "command": "vscode-harpoon.gotoEditor3",
      "when": "neovim.mode != insert && (editorTextFocus || !inputFocus)"
    },
    {
      "key": "4",
      "name": "Harpoon Goto Editor 4",
      "command": "vscode-harpoon.gotoEditor4",
      "when": "neovim.mode != insert && (editorTextFocus || !inputFocus)"
    },
    {
      "key": "5",
      "name": "Harpoon Goto Editor 5",
      "command": "vscode-harpoon.gotoEditor5",
      "when": "neovim.mode != insert && (editorTextFocus || !inputFocus)"
    },
    {
      "key": "h",
      "name": "Harpoon",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Add Editor",
          "type": "command",
          "command": "vscode-harpoon.addEditor"
        },
        {
          "key": "p",
          "name": "Quick Pick",
          "type": "command",
          "command": "vscode-harpoon.editorQuickPick"
        },
        {
          "key": "e",
          "name": "Edit Editors",
          "type": "command",
          "command": "vscode-harpoon.editEditors"
        }
      ]
    },
    {
      "key": "m",
      "name": "+Bookmark",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle"
        },
        {
          "key": "l",
          "name": "List Bookmark",
          "type": "command",
          "command": "bookmarks.list"
        },
        {
          "key": "n",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext"
        },
        {
          "key": "p",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious"
        }
      ]
    },
    {
      "key": "n",
      "name": "Show Notifications",
      "type": "command",
      "command": "notifications.toggleList"
    },
    {
      "key": "r",
      "name": "Run...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Run task",
          "type": "command",
          "command": "workbench.action.tasks.runTask"
        },
        {
          "key": "r",
          "name": "Run last task",
          "type": "command",
          "command": "workbench.action.tasks.reRunTask"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Symbol in file",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "All symbols in workspace",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        },
        {
          "key": "p",
          "name": "Search word in a project",
          "type": "commands",
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "workbench.action.findInFiles"
          ]
        },
        {
          "key": "R",
          "name": "Search all references ",
          "type": "command",
          "command": "references-view.findReferences"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "r",
          "name": "Find and Replace",
          "type": "bindings",
          "bindings": [
            {
              "key": "f",
              "name": "File",
              "type": "command",
              "command": "editor.action.startFindReplaceAction"
            },
            {
              "key": "s",
              "name": "Symbol",
              "type": "command",
              "command": "editor.action.rename",
              "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
            },
            {
              "key": "p",
              "name": "Project",
              "type": "command",
              "command": "workbench.action.replaceInFiles"
            }
          ]
        },
        {
          "key": "n",
          "name": "Notifications",
          "type": "bindings",
          "bindings": [
            {
              "key": "a",
              "name": "Show all notifications",
              "type": "command",
              "command": "notifications.showList"
            },
            {
              "key": "d",
              "name": "Dismiss all notifications",
              "type": "command",
              "command": "notifications.dismiss"
            },
            {
              "key": "h",
              "name": "Hide notification",
              "type": "command",
              "command": "notifications.hideList"
            },
            {
              "key": "t",
              "name": "Toggle notifications",
              "type": "command",
              "command": "notifications.toggleList"
            }
          ]
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "n",
          "name": "Notifications",
          "type": "command",
          "command": "notifications.clearAll"
        },
        {
          "key": "p",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "m",
          "name": "Toggle minimap",
          "type": "command",
          "command": "editor.action.toggleMinimap"
        },
        {
          "key": "f",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle primary side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "B",
          "name": "Toggle auxiliary bar visibility",
          "type": "command",
          "command": "workbench.action.toggleAuxiliaryBar"
        }
      ]
    },
    {
      "key": "t",
      "name": "Toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "z",
          "name": "Toggle zen mode",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
        },
        {
          "key": "c",
          "name": "Toggle Chat",
          "type": "command",
          "command": "workbench.panel.chat.view.copilot.toggleVisibility"
        },
        {
          "key": "a",
          "name": "Toggle AI (Copilot",
          "type": "command",
          "command": "github.copilot.completions.toggle"
        },
        {
          "key": "d",
          "name": "Toggle Do Not Disturb Mode",
          "type": "command",
          "command": "notifications.toggleDoNotDisturbMode"
        },
        {
          "key": "b",
          "name": "Toggle git blame editor decoration",
          "type": "command",
          "command": "git.blame.toggleEditorDecoration"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "r",
          "name": "Toggle screencast record",
          "type": "command",
          "command": "workbench.action.toggleScreencastMode"
        },
        {
          "key": "s",
          "name": "Toggle status bar",
          "type": "command",
          "command": "workbench.action.toggleStatusbarVisibility"
        },
        {
          "key": "w",
          "name": "Toggle ignore trim whitespace in diff",
          "type": "command",
          "command": "toggle.diff.ignoreTrimWhitespace"
        },
        {
          "key": "W",
          "name": "Toggle word wrap",
          "type": "command",
          "command": "editor.action.toggleWordWrap"
        }
      ]
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "p",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Errors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "x",
          "name": "List errors",
          "type": "command",
          "command": "workbench.action.showErrorsWarnings"
        },
        {
          "key": "n",
          "name": "Next error in files",
          "type": "command",
          "command": "editor.action.marker.nextInFiles"
        },
        {
          "key": "p",
          "name": "Previous error in files",
          "type": "command",
          "command": "editor.action.marker.prevInFiles"
        },
        {
          "key": "v",
          "name": "View problems",
          "type": "command",
          "command": "workbench.action.view.problems"
        },
        {
          "key": "f",
          "name": "Focus on problems view",
          "type": "command",
          "command": "workbench.action.problems.focus"
        }
      ]
    },
    {
      "key": "y",
      "name": "Yank...",
      "type": "bindings",
      "bindings": [
        {
          "key": "p",
          "name": "Duplicate line",
          "type": "command",
          "command": "editor.action.duplicateSelection"
        },
        {
          "key": "c",
          "name": "Duplicate line and comment",
          "type": "command",
          "command": "vscode-neovim.send",
          "args": "yygccp"
        }
      ]
    },
    {
      "key": "z",
      "name": "Folding...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle: around a point",
          "type": "command",
          "command": "editor.toggleFold"
        },
        {
          "key": "c",
          "name": "Close: at a point",
          "type": "command",
          "command": "editor.fold"
        },
        {
          "key": "b",
          "name": "Close: all block comments",
          "type": "command",
          "command": "editor.foldAllBlockComments"
        },
        {
          "key": "g",
          "name": "Close: all regions",
          "type": "command",
          "command": "editor.foldAllMarkerRegions"
        },
        {
          "key": "m",
          "name": "Close: all",
          "type": "command",
          "command": "editor.foldAll"
        },
        {
          "key": "o",
          "name": "Open: at a point",
          "type": "command",
          "command": "editor.unfold"
        },
        {
          "key": "O",
          "name": "Open: recursively",
          "type": "command",
          "command": "editor.unfoldRecursively"
        },
        {
          "key": "G",
          "name": "Open: all regions",
          "type": "command",
          "command": "editor.unfoldAllMarkerRegions"
        },
        {
          "key": "r",
          "name": "Open: all",
          "type": "command",
          "command": "editor.unfoldAll"
        }
      ]
    }
  ]
}

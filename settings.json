{
  // Flutter
  "dart.flutterSdkPath": "/home/sujan/flutter",

  // AI
  "github.copilot.chat.inlineChatHint.enabled": true,
  "supermaven.enable": {
    "*": true
  },
  "codeium.enableConfig": {
    "*": false,
    "markdown": true,
    "properties": true
  },

  // Liveserver
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,

  // Diff
  "diffEditor.codeLens": true,
  "diffEditor.hideUnchangedRegions.enabled": true,

  // Files
  "files.trimTrailingWhitespace": true,
  "files.autoSave": "onFocusChange",

  // Search
  "search.useGlobalIgnoreFiles": true,
  "search.showLineNumbers": true,
  "search.smartCase": true,

  // Window
  "window.autoDetectColorScheme": true,
  "window.titleBarStyle": "custom",
  "window.confirmSaveUntitledWorkspace": false,

  // Workbench
  "workbench.list.multiSelectModifier": "alt",
  "workbench.preferredLightColorTheme": "Tokyo Night",
  "workbench.colorTheme": "Tokyo Night",
  "workbench.preferredDarkColorTheme": "Tokyo Night",

  // Telemetry
  "telemetry.telemetryLevel": "off",

  // Explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  // Editor
  "editor.minimap.enabled": false,
  "editor.tabSize": 2,
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.cursorStyle": "block",
  "editor.copyWithSyntaxHighlighting": false,
  "editor.guides.bracketPairs": "active",
  "editor.linkedEditing": true,
  "editor.smoothScrolling": true,
  "editor.tabCompletion": "on",
  "editor.fontFamily": "'FiraCode Nerd Font', 'monospace', monospace",
  "editor.cursorSurroundingLines": 5,

  // Terminal
  "terminal.integrated.defaultProfile.linux": "fish",

  // Lua
  "luahelper.format.tab_width": 2,
  "luahelper.format.break_after_operator": false,
  "luahelper.format.keep_simple_function_one_line": true,
  "luahelper.format.keep_simple_control_block_one_line": true,
  "dart.analysisServerFolding": false,
  "luahelper.format.align_table_field": false,
  "luahelper.format.chop_down_parameter": true,
  "luahelper.format.chop_down_table": true,
  "luahelper.format.continuation_indent_width": 2,
  "luahelper.format.indent_width": 2,

  // Formatters
  "[python]": {
    "editor.formatOnType": true
  },
  "[lua]": {
    "editor.defaultFormatter": "yinfei.luahelper"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "files.associations": {
    "*.gs": "javascript"
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },

  // Recommendations
  "extensions.ignoreRecommendations": true,

  // Zen Mode
  "zenMode.hideLineNumbers": false,

  // Neovim
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "$home/.config/nvim/init.lua",
  "editor.lineNumbers": "relative",
  "vscode-neovim.compositeKeys": {
    "jk": {
      "command": "vscode-neovim.escape"
    },
    "jj": {
      "command": "vscode-neovim.escape"
    },
    "kj": {
      "command": "vscode-neovim.escape"
    }
  },

  // Whichkey
  "whichkey.delay": 0,
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    {
      "key": "/",
      "name": "Comment line",
      "type": "command",
      "command": "editor.action.commentLine"
    },
    {
      "key": ";",
      "name": "Commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "q",
      "name": "Close active editor",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.view.explorer"
    },
    {
      "key": "o",
      "name": "Quick Open File",
      "type": "command",
      "command": "workbench.action.quickOpen"
    },
    {
      "key": "-",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "/",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "m",
      "name": "minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "?",
      "name": "Search keybindings",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": ".",
      "name": "Repeat most recent action",
      "type": "command",
      "command": "whichkey.repeatMostRecent"
    },
    {
      "key": "[",
      "name": "Previous",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Previous error in file",
          "type": "command",
          "command": "editor.action.marker.prevInFiles"
        },
        {
          "key": "E",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        },
        {
          "key": "c",
          "name": "Previous change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        }
      ]
    },
    {
      "key": "]",
      "name": "Next",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Next error in file",
          "type": "command",
          "command": "editor.action.marker.nextInFiles"
        },
        {
          "key": "E",
          "name": "Next error",
          "type": "command",
          "command": "editor.action.marker.next"
        },
        {
          "key": "c",
          "name": "Next change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        }
      ]
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "x",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "c",
      "name": "+Code",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Code Action",
          "type": "command",
          "command": "editor.action.codeAction"
        },
        {
          "key": "A",
          "name": "Source action",
          "type": "command",
          "command": "editor.action.sourceAction"
        },
        {
          "key": "i",
          "name": "Organize Imports",
          "type": "command",
          "command": "editor.action.organizeImports"
        },
        {
          "key": "r",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "R",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.Refactor"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument"
        },
        {
          "key": "=",
          "name": "Format selection",
          "type": "command",
          "command": "editor.action.formatSelection"
        },
        {
          "key": ".",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix"
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "q",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "b",
          "name": "Step back",
          "type": "command",
          "command": "workbench.action.debug.stepBack"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "t",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "T",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "f",
      "name": "Find...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Show all opened files",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "e",
          "name": "Show active in explorer",
          "type": "command",
          "command": "workbench.files.action.showActiveFileInExplorer"
        },
        {
          "key": "f",
          "name": "Quick Open file",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "F",
          "name": "Open file in folder",
          "type": "command",
          "command": "workbench.action.files.openFileFolder"
        },
        {
          "key": "n",
          "name": "New Untitled",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "p",
          "name": "Switch project",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "w",
          "name": "Open active in new window",
          "type": "command",
          "command": "workbench.action.files.showOpenedFileInNewWindow"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "C",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "b",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "P",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "h",
          "name": "Hunk",
          "type": "bindings",
          "bindings": [
            {
              "key": "r",
              "name": "Revert selected ranges",
              "type": "command",
              "command": "git.revertSelectedRanges"
            }
          ]
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "s",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "u",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "g",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "S",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "r",
          "name": "Repo Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        }
      ]
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "r",
      "name": "Run...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Run task",
          "type": "command",
          "command": "workbench.action.tasks.runTask"
        },
        {
          "key": "r",
          "name": "Run last task",
          "type": "command",
          "command": "workbench.action.tasks.reRunTask"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Symbol in file",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "All symbols in workspace",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        },
        {
          "key": "w",
          "name": "Search word in a project",
          "type": "commands",
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "workbench.action.findInFiles"
          ]
        },
        {
          "key": "R",
          "name": "Search all references in side bar",
          "type": "command",
          "command": "references-view.find"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "r",
          "name": "Find and Replace",
          "type": "bindings",
          "bindings": [
            {
              "key": "f",
              "name": "File",
              "type": "command",
              "command": "editor.action.startFindReplaceAction"
            },
            {
              "key": "s",
              "name": "Symbol",
              "type": "command",
              "command": "editor.action.rename",
              "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
            },
            {
              "key": "p",
              "name": "Project",
              "type": "command",
              "command": "workbench.action.replaceInFiles"
            }
          ]
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "z",
          "name": "Toggle zen mode",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
        },
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "p",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "f",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "T",
      "name": "Toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle git blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame"
        },
        {
          "key": "c",
          "name": "Toggle find case sensitive",
          "type": "command",
          "command": "toggleFindCaseSensitive"
        },
        {
          "key": "r",
          "name": "Toggle screencast record",
          "type": "command",
          "command": "workbench.action.toggleScreencastMode"
        },
        {
          "key": "s",
          "name": "Toggle status bar",
          "type": "command",
          "command": "workbench.action.toggleStatusbarVisibility"
        },
        {
          "key": "w",
          "name": "Toggle ignore trim whitespace in diff",
          "type": "command",
          "command": "toggle.diff.ignoreTrimWhitespace"
        },
        {
          "key": "W",
          "name": "Toggle word wrap",
          "type": "command",
          "command": "editor.action.toggleWordWrap"
        },
        {
          "key": "m",
          "name": "Toggle minimap",
          "type": "command",
          "command": "editor.action.toggleMinimap"
        }
      ]
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "-",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "/",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "p",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Errors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "x",
          "name": "List errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "n",
          "name": "Next error",
          "type": "command",
          "command": "editor.action.marker.next"
        },
        {
          "key": "p",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        }
      ]
    },
    {
      "key": "z",
      "name": "Folding...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle: around a point",
          "type": "command",
          "command": "editor.toggleFold"
        },
        {
          "key": "c",
          "name": "Close: at a point",
          "type": "command",
          "command": "editor.fold"
        },
        {
          "key": "b",
          "name": "Close: all block comments",
          "type": "command",
          "command": "editor.foldAllBlockComments"
        },
        {
          "key": "g",
          "name": "Close: all regions",
          "type": "command",
          "command": "editor.foldAllMarkerRegions"
        },
        {
          "key": "m",
          "name": "Close: all",
          "type": "command",
          "command": "editor.foldAll"
        },
        {
          "key": "o",
          "name": "Open: at a point",
          "type": "command",
          "command": "editor.unfold"
        },
        {
          "key": "O",
          "name": "Open: recursively",
          "type": "command",
          "command": "editor.unfoldRecursively"
        },
        {
          "key": "G",
          "name": "Open: all regions",
          "type": "command",
          "command": "editor.unfoldAllMarkerRegions"
        },
        {
          "key": "r",
          "name": "Open: all",
          "type": "command",
          "command": "editor.unfoldAll"
        }
      ]
    }
  ]
}
